version: 2.1

jobs:
  test-java:  # Job pour exécuter les tests et générer la couverture de code
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - run:
          name: Calculate cache key
          command: |-
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          name: Run Maven Tests with Coverage
          command: mvn verify
      - store_test_results:
          path: target/surefire-reports
      - store_artifacts:
          path: target/site/jacoco
      - save_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.m2/repository

  checkstyle:  # Nouveau job pour exécuter CheckStyle
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - run:
          name: Run CheckStyle
          command: mvn checkstyle:checkstyle
      - store_artifacts:
          path: target/site/checkstyle.html
      - store_artifacts:
          path: target/checkstyle-result.xml
      - run:
          name: Generate CheckStyle Badge
          command: |
            if [ -f target/checkstyle-result.xml ]; then
              ERRORS=$(grep -o '<error ' target/checkstyle-result.xml | wc -l)
              COLOR="brightgreen"
              if [ "$ERRORS" -gt 0 ]; then
                COLOR="red"
              fi
              mkdir -p badges
              echo '<svg xmlns="http://www.w3.org/2000/svg" width="120" height="20">
                <rect width="120" height="20" fill="'$COLOR'"/>
                <text x="60" y="14" fill="#fff" font-size="11" text-anchor="middle">CheckStyle: '$ERRORS' Errors</text>
              </svg>' > badges/checkstyle-badge.svg
            else
              echo "CheckStyle report not found. Skipping badge generation."
              exit 1
            fi
      - run:
          name: Commit Badge to Repo
          command: |
            git config --global user.email "circleci-bot@example.com"
            git config --global user.name "CircleCI Bot"
            git add badges/checkstyle-badge.svg || echo "No changes to add"
            git commit -m "Update CheckStyle Badge [skip ci]" || echo "No changes to commit"
            git push origin $(git rev-parse --abbrev-ref HEAD) || echo "Nothing to push"

workflows:
  build-and-upload:
    jobs:
      - test-java:
          filters:
            branches:
              only:
                - master
      - checkstyle:
          filters:
            branches:
              only:
                - master
